{"version":3,"sources":["moment-holiday.js","argentina.js","austria.js","canada.js","colombia.js","croatia.js","denmark.js","easter.js","finland.js","germany.js","ghana.js","india.js","japan.js","nigeria.js","russia.js","switzerland.js","united_kingdom.js","united_states.js"],"names":["moment","require","amd","this","parserExtensions","parseHoliday","self","date","adjust","pd","days","i","length","pe","isMoment","charAt","match","range","dates","split","m","ds","td","ii","push","year","parseInt","month","w","slice","wd","dt","d","startOf","limit","endOf","diff","wds","forward","wi","day","add","subtract","ai","concat","di","arrayify","keywordMatches","str","kw","f","RegExp","findHoliday","holiday","parse","holidayObj","pt","wn","obj","h","holidays","active","hasOwnProperty","fk","findKey","hd","filter","keywords_n","keywords_y","matchesY","keywords","matches","Object","keys","findHolidays","find","merge","getAllHolidays","getLocale","locale","regions","toLowerCase","replace","shift","path","__dirname","pop","e","o","r","l","y","n","regions_n","join","indexOf","compileRegions","holidayLoop","count","b","b2","ha","hi","isSame","arr","constructor","Array","o1","o2","assign","fn","single","dKeys","isHoliday","returnTitle","hs","previousHoliday","previousHolidays","nextHoliday","nextHolidays","holidaysBetween","Date","active_last","modifyHolidays","set","specifics","newH","k","is","remove","undo","c","load","locales","extendParser","func","module","exports","call","argentina","Año Nuevo","Lunes de Carnival","Martes de Carnival","Día de la Memoria por la Verdad y la Justicia","Día del Veterano de Guerra y los Caídos en las Islas Malvinas","Jueves Santo","Viernes Santo","Día de Acción por la tolerancia y el respeto entre los pueblos","Día del Trabajador","Día de la Revolución de Mayo","Día Paso a la Inmortalidad del Gral. Manual Belgrano","Día de la Independencia","Paso a la Inmortalidad del Gral. José de San Martín","Día del Respeto a la Diversidad Cultural","Día de la Soberanía Nacional","Navidad","austria","Neujahrstag","Heilige Drei Könige","St. Josef","Karfreitag","Ostersonntag","Ostermontag","Staatsfeiertag","St. Florian","Christi Himmelfahrt","kaywords","Pfingstsonntag","Pfingstmontag","Fronleichnam","Mariä Himmelfahrt","St. Rupert","Tag der Volksabstimmung","Nationalfeiertag","Allerheiligen","St. Martin","St. Leopold","Mariä Empfängnis","Heiliger Abend","Christtag","Stefanitag","Silvester","canada","New Year's Day","Valentine's Day","Islander Day","Family Day","Louis Riel Day","Saint Patrick's Day","Good Friday","Easter Sunday","Victoria Day","Mother's Day","Father's Day","Aboriginal Day","Saint Jean Baptiste Day","Canada Day","Civic Day","Labour Day","Halloween","Remembrance Day","Thanksgiving Day","Christmas Day","Boxing Day","colombia","Día de los Reyes Magos","Día de San José","Día del Trabajo","Día de la Ascensión","Corpus Christi","Sagrado Corazón","San Pedro y San Pablo","Batalla de Boyacá","La asunción de la Virgen ","Día de la Raza","Todos los Santos ","Independencia de Cartagena","Día de la Inmaculada Concepción ","Día de Navidad ","croatia","Nova Godina","Bogojavljenje","Uskrs","Uskrsni ponedjeljak","Praznik rada","Tijelovo","Dan antifašističke borbe","Dan državnosti","Dan zahvalnosti","Velika Gospa","Dan neovisnosti","Dan svih svetih","Božić","Sveti Stjepan","denmark","Nytårsdag","Skærfredag","Påske","Anden påskedag","Første maj","Kristi himmelfart","Pinse","Anden pinse","Juleaften","Anden juledag","easter","Ash Wednesday","Lent","Maundy Thursday","Holy Saturday","Easter Monday","Ascension Day","Pentecost Sunday","Whit Monday","Math","floor","j","substring","format","finland","Uudenvuodenpäivä","Loppiainen","Vappu","Juhannuspäivä","Pyhäinpäivä","Joulupäivä","Tapaninpäivä","Pitkäperjantai","Pääsiäispäivä","Toinen Pääsiäispäivä","Helatorstai","germany","Maifeiertag","Tag der deutschen Einheit","Reformationstag","Buß- und Bettag","Weihnachten","Zweiter Weihnachtsfeiertag","ghana","New Year's Holiday","Independence Day","African Unity Day","Eid ul-Fitr","Republic Day","Eidul-Adha","Founders Day","Farmer's Day","india","Mahavir Jayanti","May Day","Gandhi Jayanti","japan","Gantan","Seijin no hi","Kenkoku kinen no hi","Shunbun no hi","Showa no hi","Kenpou kinenbi","Midori no hi","Kodomo no hi","Umi no hi","Yama no hi","Keiro no hi","Shubun no hi","Taiiku no hi","Bunka no hi","Rodo kansha no hi","Tennou tanjoubi","nigeria","Women's Day","Dr. Samuel Memorial Day","Worker's Day","Children's Day","Democracy Day","Eid-el-fitri Sallah","Sallah Holiday","Sallah Holidays","Id el Kabir","russia","New Year and Christmas Holidays","Defender's Day","Victory Day","Russia Day","National Unity Day","New Year","switzerland","Berchtoldstag","Dreikönigstag","Ausrufung Republik Neuenburg","Josephstag","Näfelser Fahrt","Tag der Arbeit","Auffahrt","Unabhängigkeitsfest Jura","St. Peter und Paul","Bundesfeiertag","Genfer Bettag","Eidg. Dank-, Buss- und Bettag","Bettagsmontag","Mauritiustag","Bruderklausenfest","Weihnachtstag","Stephanstag","Wiederherstellung Republik Genf","united_kingdom","Saint David's Day","Mothering Sunday","Saint George's Day","Early May Bank Holiday","Spring Bank Holiday","Queen's Birthday","Battle of the Boyne","Summer Bank Holiday (Scotland)","Summer Bank Holiday","Guy Fawks Day","Saint Andrews Day","united_states","Martin Luther King Jr. Day","Washington's Birthday","Memorial Day","Labor Day","Columbus Day","Veteran's Day","Day after Thanksgiving","Christmas Eve","New Year's Eve"],"mappings":"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","file":"moment-holiday-pkg.min.js","sourcesContent":["//! moment-holiday.js\n//! version : 1.5.2\n//! author : Kodie Grantham\n//! license : MIT\n//! https://github.com/kodie/moment-holiday\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  var parserExtensions = [];\n\n  var parseHoliday = function(self, date, adjust) {\n    var days = [], pd;\n\n    for (var i = 0; i < parserExtensions.length; i++) {\n      var pe = parserExtensions[i](self, date);\n      if (pe || pe === false) { pd = pe; }\n    }\n\n    if (pd === false) { return false; }\n    if (typeof pd === 'string') { date = pd; } else if (pd) { days = pd; }\n\n    if (!moment.isMoment(days) && !days.length && date.charAt(0).match(/[0-9(]/)) {\n      var range = false;\n      var dates = date.split('|');\n\n      if (dates.length > 1) { range = true; }\n      if (dates.length > 2) { dates = [dates[0], dates[1]]; }\n\n      for (var i = 0; i < dates.length; i++) {\n        var m = moment(self);\n        var ds = dates[i].split('/');\n\n        if (ds.length === 1 || (ds.length === 2 && ds[1].charAt(0) !== '(' && ds[1].length === 4)) {\n          var td = dates[i];\n          i = -1;\n          dates = [];\n          for (var ii = 1; ii < 13; ii++) { dates.push(ii + '/' + td); }\n          continue;\n        }\n\n        if (ds.length > 2) { m.year(parseInt(ds[2])); }\n\n        m.month((parseInt(ds[0]) - 1));\n\n        if (ds[1].charAt(0) === '(') {\n          var w = ds[1].slice(1, -1).split(',');\n          var wd = parseInt(w[0]);\n          var dt = parseInt(w[1]);\n          var d = moment(m).startOf('month');\n          var limit = (moment(m).endOf('month').diff(d, 'days') + 1);\n          var wds = [];\n\n          if (w[1] && w[1].charAt(0) === '[') {\n            var forward = true;\n            dt = parseInt(w[1].slice(1, -1));\n\n            if (dt < 0) {\n              forward = false;\n              dt = parseInt(w[1].slice(2, -1));\n            }\n\n            d = moment(m).date(dt);\n\n            for (var wi = 0; wi < 7; wi++) {\n              if (d.day() === wd) { days.push(moment(d)); break; }\n\n              if (forward) {\n                d.add(1, 'day');\n              } else {\n                d.subtract(1, 'day');\n              }\n            }\n\n            continue;\n          }\n\n          for (var ai = 0; ai < limit; ai++) {\n            if (d.day() === wd) { wds.push(moment(d)); }\n            d.add(1, 'day');\n          }\n\n          if (!dt) {\n            days = days.concat(wds);\n            continue;\n          } else if (dt < 0) {\n            m = wds[wds.length + dt];\n          } else {\n            m = wds[dt - 1];\n          }\n\n          days.push(m);\n        } else {\n          days.push(m.date(ds[1]));\n        }\n      }\n\n      if (range && days.length > 1) {\n        var diff = days[1].diff(days[0], 'days');\n\n        if (diff > 1) {\n          var di = moment(days[0]);\n          days = [days[0]];\n\n          for (var i = 0; i < diff; i++) {\n            di.add(1, 'day');\n            days.push(moment(di));\n          }\n        }\n      }\n    }\n\n    days = arrayify(days);\n\n    for (var i = 0; i < days.length; i++) {\n      if (!moment.isMoment(days[i])) { delete(days[i]); continue; }\n\n      if (adjust) {\n        if (days[i].day() === 0) { days[i] = days[i].add(1, 'day'); }\n        if (days[i].day() === 6) { days[i] = days[i].subtract(1, 'day'); }\n      }\n\n      days[i] = days[i].startOf('day');\n    }\n\n    if (!days.length) { return false; }\n    if (days.length === 1) { return days[0]; }\n\n    return days;\n  };\n\n  var keywordMatches = function(str, kw) {\n    var m = [];\n    kw = arrayify(kw);\n\n    for (var i = 0; i < kw.length; i++) {\n      var f = str.match(new RegExp(kw[i], 'gi'));\n      if (f) { m = m.concat(f); }\n    }\n\n    return m;\n  };\n\n  var findHoliday = function(self, holiday, adjust, parse, holidayObj) {\n    var pt = {};\n    var wn = [];\n    var obj = {};\n\n    h = holidayObj || moment.holidays.active;\n\n    if (h.hasOwnProperty(holiday)) {\n      wn.push(holiday);\n    } else if (fk = findKey(holiday, h)) {\n      wn.push(fk);\n    } else {\n      for (var hd in h) {\n        if (!h.hasOwnProperty(hd)) { continue; }\n\n        pt[hd] = keywordMatches(holiday, hd.split(/[\\s,.-]+/).filter(function(w){ return w.length > 2; })).length;\n\n        if (h[hd].keywords_n) {\n          var matchesN = keywordMatches(holiday, h[hd].keywords_n);\n          if (matchesN.length) {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords_y) {\n          var matchesY = keywordMatches(holiday, h[hd].keywords_y);\n          if (matchesY && matchesY.length === h[hd].keywords_y.length) {\n            pt[hd] += matchesY.length;\n          } else {\n            pt[hd] = 0;\n            continue;\n          }\n        }\n\n        if (h[hd].keywords) {\n          var matches = keywordMatches(holiday, h[hd].keywords);\n          if (matches) {\n            pt[hd] += matches.length;\n          } else {\n            continue;\n          }\n        }\n      }\n\n      //console.log(pt); // Display scores\n\n      for (var w in pt) {\n        if (!pt[w] || !pt.hasOwnProperty(w)) { continue; }\n        if (!wn.length || pt[w] === pt[wn[0]]) { wn.push(w); continue; }\n        if (pt[w] > pt[wn[0]]) { wn = [w]; continue; }\n      }\n    }\n\n    if (!wn.length) { return false; }\n\n    if (parse !== false) {\n      for (var i = 0; i < wn.length; i++) {\n        var d = parseHoliday(self, h[wn[i]].date, adjust);\n        if (d) { obj[wn[i]] = d; }\n      }\n\n      if (Object.keys(obj).length) { return obj; }\n    } else {\n      return wn;\n    }\n\n    return false;\n  };\n\n  var findHolidays = function(self, holidays, adjust, parse, holidayObj) {\n    var h = [];\n    if (parse) { h = {}; }\n\n    holidays = arrayify(holidays);\n    if (!holidayObj) { holidayObj = moment.holidays.active; }\n\n    for (var i = 0; i < holidays.length; i++) {\n      var find = findHoliday(self, holidays[i], adjust, parse, holidayObj);\n\n      if (find) {\n        if (parse) {\n          h = merge(h, find);\n        } else {\n          h = h.concat(find);\n        }\n      }\n    }\n\n    return h;\n  };\n\n  var getAllHolidays = function(self, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n      if (td = parseHoliday(self, h[hd].date, adjust)) { d[hd] = td; }\n    }\n\n    return d;\n  };\n\n  var compileRegions = function(locale, regions) {\n    var h = moment.holidays[locale];\n    var o = {};\n\n    if (h) {\n      for (var i = 0; i < regions.length; i++) {\n        var r = regions[i].toLowerCase();\n        var l = moment.holidays[locale + '/' + r];\n        l = {};\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var y = h[hd].regions || [];\n          var n = h[hd].regions_n || [];\n\n          if (y.length) { y.join().toLowerCase().split(); }\n          if (n.length) { n.join().toLowerCase().split(); }\n\n          if ((!y.length && !n.length) || (y.length && ~y.indexOf(r)) || (n.length && !~n.indexOf(r))) {\n            l[hd] = h[hd];\n          }\n        }\n\n        if (l) { o = merge(o, l); }\n      }\n    }\n\n    if (!Object.keys(o).length) { return false; }\n\n    return o;\n  };\n\n  var getLocale = function(locale) {\n    regions = locale.split('/');\n    locale = regions[0].toLowerCase().replace(' ', '_');\n    regions.shift();\n\n    if (!moment.holidays[locale]) {\n      try {\n        var path = './locale/';\n        if (__dirname.split('/').slice(-1).pop() == 'build') { path = '.' + path; }\n        require(path + locale);\n      } catch(e) { }\n    }\n\n    if (moment.holidays[locale]) {\n      if (regions.length) { return compileRegions(locale, regions); }\n      return moment.holidays[locale];\n    }\n\n    return false;\n  };\n\n  var holidayLoop = function(self, count, forward, adjust) {\n    if (!count) { count = 1; }\n\n    var h = getAllHolidays(self, adjust);\n    var l = moment(self);\n    var y = self.year();\n    var w = [];\n\n    for (var i = 0; i < count; i++) {\n      var d = moment(l);\n\n      while (true) {\n        var b = false;\n\n        if (forward) {\n          d.add(1, 'day');\n        } else {\n          d.subtract(1, 'day');\n        }\n\n        if (d.year() !== y) {\n          h = getAllHolidays(d, adjust);\n          y = d.year();\n        }\n\n        if (!Object.keys(h).length) { b = true; break; }\n\n        for (var hd in h) {\n          if (!h.hasOwnProperty(hd)) { continue; }\n\n          var b2 = false;\n          var ha = arrayify(h[hd]);\n\n          for (var hi = 0; hi < ha.length; hi++) {\n            if (d.isSame(ha[hi], 'day')) {\n              w.push(ha[hi]);\n              l = moment(d);\n              b2 = true;\n              break;\n            }\n          }\n\n          if (b2) { b = true; break; }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n    if (w.length === 1) { return w[0]; }\n\n    return w;\n  };\n\n  var arrayify = function(arr) {\n    if (arr && arr.constructor !== Array) { return [arr]; }\n    return arr;\n  };\n\n  var findKey = function(find, obj) {\n    if (obj.constructor === Object) { obj = Object.keys(obj); }\n    for (var i = 0; i < obj.length; i++) {\n      if (find.toLowerCase() === obj[i].toLowerCase()) { return obj[i]; }\n    }\n    return false;\n  };\n\n  var merge = function(o1, o2) {\n    return Object.assign({}, o1, o2);\n  };\n\n  moment.fn.holiday = function(holidays, adjust) {\n    var h = moment.holidays.active;\n    var d = {};\n    var single = false;\n\n    if (!holidays) {\n      d = getAllHolidays(this, adjust);\n    } else {\n      if (holidays.constructor !== Array) {\n        single = true;\n        holidays = [holidays];\n      }\n\n      for (var i = 0; i < holidays.length; i++) {\n        if (td = findHoliday(this, holidays[i], adjust)) { d = Object.assign({}, d, td); }\n      }\n    }\n\n    var dKeys = Object.keys(d);\n\n    if (!dKeys.length) { return false; }\n    if (dKeys.length === 1 && single) { return d[dKeys[0]]; }\n\n    return d;\n  };\n\n  moment.fn.holidays = function(holidays, adjust) {\n    return this.holiday(holidays, adjust);\n  };\n\n  moment.fn.isHoliday = function(holidays, adjust) {\n    var h, returnTitle, hs = [];\n\n    if (holidays) {\n      holidays = arrayify(holidays);\n      h = this.holiday(holidays, adjust);\n      returnTitle = false;\n    } else {\n      h = getAllHolidays(this, adjust);\n      returnTitle = true;\n    }\n\n    if (!h) { return false; }\n\n    for (var hd in h) {\n      if (!h.hasOwnProperty(hd)) { continue; }\n\n      var ha = arrayify(h[hd]);\n\n      for (var hi = 0; hi < ha.length; hi++) {\n        if (this.isSame(ha[hi], 'day')) {\n          if (returnTitle) {\n            hs.push(hd);\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (hs.length) {\n      if (hs.length === 1) { return hs[0]; }\n      return hs;\n    }\n\n    return false;\n  };\n\n  moment.fn.previousHoliday = function(count, adjust) {\n    return holidayLoop(this, count, false, adjust);\n  };\n\n  moment.fn.previousHolidays = function(count, adjust) {\n    return this.previousHoliday(count, adjust);\n  };\n\n  moment.fn.nextHoliday = function(count, adjust) {\n    return holidayLoop(this, count, true, adjust);\n  };\n\n  moment.fn.nextHolidays = function(count, adjust) {\n    return this.nextHoliday(count, adjust);\n  };\n\n  moment.fn.holidaysBetween = function(date, adjust) {\n    if (!date) { date = new Date(); }\n    date = moment(date).subtract(1, 'day');\n\n    var h = getAllHolidays(this, adjust);\n    var d = moment(this);\n    var y = d.year();\n    var w = [];\n\n    for (var i = 0; i < date.diff(this, 'days'); i++) {\n      d.add(1, 'day');\n\n      if (d.year() !== y) {\n        h = getAllHolidays(d, adjust);\n        y = d.year();\n      }\n\n      if (!Object.keys(h).length) { break; }\n\n      for (var hd in h) {\n        var b = false;\n        var ha = arrayify(h[hd]);\n\n        for (var hi = 0; hi < ha.length; hi++) {\n          if (d.isSame(ha[hi], 'day')) {\n            w.push(ha[hi]);\n            b = true;\n            break;\n          }\n        }\n\n        if (b) { break; }\n      }\n    }\n\n    if (!w.length) { return false; }\n\n    return w;\n  };\n\n  moment.holidays = {\n    active: {},\n    active_last: {}\n  };\n\n  moment.modifyHolidays = {\n    set: function(holidays, specifics) {\n      var newH = {};\n\n      if (holidays.constructor === Array) {\n        var hs = [];\n\n        for (var i = 0; i < holidays.length; i++) {\n          var d = findHoliday(this, holidays[i], null, false);\n          if (d) { hs = hs.concat(d); }\n        }\n\n        if (hs.length) {\n          newH = merge(moment.holidays.active);\n\n          for (var hd in newH) {\n            if (!newH.hasOwnProperty(hd)) { continue; }\n            if (!~hs.indexOf(hd)) { delete(newH[hd]); }\n          }\n        }\n      } else if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { newH[k[i]] = merge(locale[k[i]]); }\n          } else {\n            newH = merge(locale);\n          }\n        }\n      } else {\n        newH = holidays;\n      }\n\n      if ((Object.keys(newH).length || holidays === newH) && !Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    add: function(holidays, specifics) {\n      if (typeof holidays === 'string') {\n        var locale = getLocale(holidays);\n        holidays = {};\n\n        if (locale) {\n          if (specifics) {\n            var k = findHolidays(this, specifics, false, false, locale);\n            for (var i = 0; i < k.length; i++) { holidays[k[i]] = merge(locale[k[i]]); }\n          } else {\n            holidays = locale;\n          }\n        }\n      }\n\n      if (Object.keys(holidays).length) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = merge(moment.holidays.active, holidays);\n      }\n\n      return this;\n    },\n\n    remove: function(holidays) {\n      holidays = arrayify(holidays);\n\n      var find = findHolidays(this, holidays, false, false);\n      var newH = merge(moment.holidays.active);\n\n      if (find) {\n        for (var i = 0; i < find.length; i++) { delete(newH[find[i]]); }\n      }\n\n      if (!Object.is(moment.holidays.active, newH)) {\n        moment.holidays.active_last = merge(moment.holidays.active);\n        moment.holidays.active = newH;\n      }\n\n      return this;\n    },\n\n    undo: function() {\n      var c = merge(moment.holidays.active);\n      moment.holidays.active = merge(moment.holidays.active_last);\n      moment.holidays.active_last = c;\n      return this;\n    },\n\n    load: function(locales) {\n      locales = arrayify(locales);\n      for (var i = 0; i < locales.length; i++) { getLocale(locales[i]); }\n      return this;\n    },\n\n    extendParser: function(func) {\n      parserExtensions.push(func);\n      return this;\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Argentina\n//! author : NahuelOvejero : https://github.com/NahuelOvejero\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.argentina = {\n    \"Año Nuevo\": {\n      date: '1/1',\n      keywords: ['ano', 'new', 'year']\n    },\n    \"Lunes de Carnival\": {\n      date: 'easter-48',\n      keywords: ['festival']\n    },\n    \"Martes de Carnival\": {\n      date: 'easter-47',\n      keywords: ['festival'],\n    },\n    \"Día de la Memoria por la Verdad y la Justicia\": {\n      date: '3/24',\n    },\n    \"Día del Veterano de Guerra y los Caídos en las Islas Malvinas\": {\n      date: '4/2',\n      keywords: ['caidos']\n    },\n    \"Jueves Santo\" : {\n      date: 'easter-3',\n      keywords: ['festividad', 'cristina']\n    },\n    \"Viernes Santo\": {\n      date: 'easter-2',\n      keywords: ['festividad', 'cristina']\n    },\n    \"Día de Acción por la tolerancia y el respeto entre los pueblos\": {\n      date: '4/24',\n      keywords: ['accion', 'pueblo']\n    },\n    \"Día del Trabajador\": {\n      date: '5/1',\n      keywords: ['labor', 'labour']\n    },\n    \"Día de la Revolución de Mayo\": {\n      date: '5/25',\n      keywords: ['revolucion', 'revolution']\n    },\n    \"Día Paso a la Inmortalidad del Gral. Manual Belgrano\": {\n      date: '6/20',\n      keywords: ['bandera', 'flag']\n    },\n    \"Día de la Independencia\": {\n      date: '7/9',\n      keywords: ['independence']\n    },\n    \"Paso a la Inmortalidad del Gral. José de San Martín\": {\n      date: '8/(1,3)',\n      keywords: ['martin', 'jose', 'saint', 'st[\\\\s\\\\.]']\n    },\n    \"Día del Respeto a la Diversidad Cultural\": {\n      date: '10/(1,2)',\n      keywords: ['christopher', 'columbus', 'culture']\n    },\n    \"Día de la Soberanía Nacional\": {\n      date: '11/(1,4)',\n      keywords: ['soberania', 'sovereignty']\n    },\n    \"Navidad\": {\n      date: '12/25',\n      keywords: ['christmas']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Austria\n//! author : Nick Müller : https://github.com/MorpheusXAUT\n/* regions :\n      B : Burgenland\n      K : Kärnten\n      NOE : Niederösterreich\n      OOE : Oberösterreich\n      S : Salzburg\n      ST : Steiermark\n      T : Tirol\n      V : Vorarlberl\n      W : Wien\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  // Holiday data taken from https://www.feiertage-oesterreich.at, including non-public holidays\n  moment.holidays.austria = {\n    \"Neujahrstag\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Heilige Drei Könige\": {\n      date: '1/6',\n      keywords: ['konige']\n    },\n    \"St. Josef\": {\n      date: '3/19',\n      keywords: ['josef'],\n      keywords_n: ['public'],\n      regions: ['k', 'st', 't', 'v']\n    },\n    \"Karfreitag\": {\n      date: 'easter-2',\n      keywords: ['good', 'friday'],\n      keywords_n: ['public']\n    },\n    \"Ostersonntag\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday']\n    },\n    \"Ostermontag\": {\n      date: 'easter+1',\n      keywords: ['easter', 'monday']\n    },\n    \"Staatsfeiertag\": {\n      date: '5/1',\n      keywords: ['national']\n    },\n    \"St. Florian\": {\n      date: '4/5',\n      keywords: ['florian'],\n      keywords_n: ['public'],\n      regions: ['k', 'st', 't', 'v']\n    },\n    \"Christi Himmelfahrt\": {\n      date: 'easter+39',\n      kaywords: ['ascension']\n    },\n    \"Pfingstsonntag\": {\n      date: 'easter+49',\n      keywords: ['pentecost']\n    },\n    \"Pfingstmontag\": {\n      date: 'easter+50',\n      keywords: ['whit', 'monday']\n    },\n    \"Fronleichnam\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi']\n    },\n    \"Mariä Himmelfahrt\": {\n      date: '8/15',\n      keywords: ['assumption', 'mary']\n    },\n    \"St. Rupert\": {\n      date: '9/24',\n      keywords: ['rupert'],\n      keywords_n: ['public'],\n      regions: ['s']\n    },\n    \"Tag der Volksabstimmung\": {\n      date: '10/10',\n      keywords: ['referendum'],\n      keywords_n: ['public'],\n      regions: ['s']\n    },\n    \"Nationalfeiertag\": {\n      date: '10/26',\n      keywords: ['national']\n    },\n    \"Allerheiligen\": {\n      date: '11/1',\n      keywords: ['all', 'saints']\n    },\n    \"St. Martin\": {\n      date: '11/11',\n      keywords: ['martin'],\n      keywords_n: ['public'],\n      regions: ['b']\n    },\n    \"St. Leopold\": {\n      date: '11/15',\n      keywords: ['leopold'],\n      keywords_n: ['public'],\n      regions: ['noe']\n    },\n    \"Mariä Empfängnis\": {\n      date: '8/15',\n      keywords: ['immaculate', 'conception']\n    },\n    \"Heiliger Abend\": {\n      date: '12/24',\n      keywords: ['christmas'],\n      keywords_n: ['public'],\n      keywords_y: ['eve']\n    },\n    \"Christtag\": {\n      date: '12/25',\n      keywords: ['christmas'],\n      keywords_n: ['eve']\n    },\n    \"Stefanitag\": {\n      date: '12/25',\n      keywords: ['stephen']\n    },\n    \"Silvester\": {\n      date: '12/31',\n      keywords: ['new', 'year', 'eve']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Canada\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      AB : Alberta\n      BC : British Columbia\n      MB : Manitoba\n      NB : New Brunswick\n      NL : Newfoundland and Labrador\n      NS : Nova Scotia\n      NT : Northwest Territories\n      NU : Nunavut\n      ON : Ontario\n      PE : Prince Edward Island\n      QC : Quebec\n      SK : Saskatchewan\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.canada = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve'],\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Islander Day\": {\n      date: '2/(1,2)',\n      keywords_y: ['island'],\n      regions: ['pe']\n    },\n    \"Family Day\": {\n      date: '2/(1,3)',\n      regions: ['ab', 'bc', 'on', 'sk']\n    },\n    \"Louis Riel Day\": {\n      date: '2/(1,3)',\n      regions: ['mb']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n      regions_n: ['qc']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n    },\n    \"Victoria Day\": {\n      date: '5/(1,[-24])',\n      regions_n: ['nb', 'nl', 'ns']\n    },\n    \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Aboriginal Day\": {\n      date: '6/21',\n      regions: ['nt']\n    },\n    \"Saint Jean Baptiste Day\": {\n      date: '6/24',\n      keywords: ['st[\\\\s\\\\.]'],\n      regions: ['qc']\n    },\n    \"Canada Day\": {\n      date: '7/1',\n    },\n    \"Civic Day\": {\n      date: '8/(1,1)',\n      regions: ['ab', 'bc', 'nb', 'nu', 'on', 'sk']\n    },\n    \"Labour Day\": {\n      date: '9/(1,1)',\n      keywords: ['labor']\n    },\n    \"Halloween\": {\n      date: '10/31',\n    },\n    \"Remembrance Day\": {\n      date: '11/11',\n      regions_n: ['mb', 'ns', 'on', 'qc']\n    },\n    \"Thanksgiving Day\": {\n      date: '11/(4,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_n: ['after'],\n      regions_n: ['nb', 'nl', 'ns']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['on']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.colombia = {\n    \"Día de los Reyes Magos\": {\n      date: '1/9',\n      keywords: ['reyes magos']\n    },\n    \"Día de San José\": {\n      date: '3/20',\n      keywords: ['Día del hombre']\n    },\n    \"Día del Trabajo\": {\n      date: '4/1',\n    },\n    \"Día de la Ascensión\": {\n      date: '5/29',\n    },\n    \"Corpus Christi\": {\n      date: '6/19',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Sagrado Corazón\" : {\n      date: '6/26',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"San Pedro y San Pablo\": {\n      date: '7/3',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Día de la Independencia\": {\n      date: '7/20',\n      keywords: ['bandera', 'independencia Colombia', 'libertad']\n    },\n    \"Batalla de Boyacá\": {\n      date: '8/7',\n      keywords: ['Batalla de Boyaca','Colombia', 'libertad']\n    },\n    \"La asunción de la Virgen \": {\n      date: '8/21',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Día de la Raza\": {\n      date: '10/16',\n      keywords: ['Raza','abolicion de esclavitud']\n    },\n    \"Todos los Santos \": {\n      date: '11/6',\n      keywords: ['festividad', 'cristiana']\n    }, \n    \"Independencia de Cartagena\":{\n    \tdate: '11/13'\n    },\n    \"Día de la Inmaculada Concepción \": {\n      date: '12/8',\n      keywords: ['festividad', 'cristiana']\n    },\n    \"Día de Navidad \": {\n      date: '12/8',\n      keywords: ['christmas', 'navidad', 'merryxmas']\n   }    \n  };\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Croatia / Hrvatska\n//! author : diomed : https://github.com/diomed\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.croatia = {\n    \"Nova Godina\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Bogojavljenje\": {\n      date: '1/6',\n      keywords: ['tri kralja']\n    },\n    \"Uskrs\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday']\n    },\n    \"Uskrsni ponedjeljak\": {\n      date: 'easter+1',\n      keywords: ['uskršnji', 'easter', 'monday']\n    },\n    \"Praznik rada\": {\n      date: '5/1'\n    },\n    \"Tijelovo\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi']\n    },\n    \"Dan antifašističke borbe\": {\n      date: '6/22',\n      keywords: ['antifasisticke']\n    },\n    \"Dan državnosti\": {\n      date: '6/25',\n      keywords: ['drzavnost', 'domovinske', 'domovinska']\n    },\n    \"Dan zahvalnosti\": {\n      date: '8/5',\n      keywords: ['domovinske', 'thanksgiving']\n    },\n    \"Velika Gospa\": {\n      date: '8/15'\n    },\n    \"Dan neovisnosti\": {\n      date: '10/8',\n      keywords: ['nezavisnosti', 'independence']\n    },\n    \"Dan svih svetih\": {\n      date: '11/1',\n      keywords: ['svi sveti', 'sesvete', 'sisvete']\n    },\n    \"Božić\": {\n      date: '12/25',\n      keywords: ['bozic', 'christmas']\n    },\n    \"Sveti Stjepan\": {\n      date: '12/26',\n      keywords: ['sv[\\\\s\\\\.]']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Denmark\n//! author : Alexander Køpke : https://github.com/alexanderkopke\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.denmark = {\n    \"Nytårsdag\": {\n      date: '1/1',\n      keywords: ['nytarsdag', 'new', 'years']\n    },\n    \"Skærfredag\": {\n      date: 'easter-2',\n      keywords: ['skaerfredag', 'good', 'friday']\n    },\n    \"Påske\": {\n      date: 'easter',\n      keywords: ['paske', 'easter', 'sunday'],\n    },\n    \"Anden påskedag\": {\n      date: 'easter+1',\n      keywords: ['andenpåskedag', 'andenpaskedag', 'paskedag', 'easter', 'monday']\n    },\n    \"Første maj\": {\n      date: '5/1',\n      keywords: ['førstemaj', 'forstemaj', 'forste', 'maj']\n    },\n    \"Kristi himmelfart\": {\n      date: 'easter+39',\n      kaywords: ['ascension']\n    },\n    \"Pinse\": {\n      date: 'easter+49',\n      keywords: ['pentecost']\n    },\n    \"Anden pinse\": {\n      date: 'easter+50',\n      keywords: ['andenpinsedag', 'pinsedag', 'whit', 'monday']\n    },\n    \"Juleaften\": {\n      date: '12/24',\n      keywords: ['christmas']\n    },\n    \"Anden juledag\": {\n      date: '12/25',\n      keywords: ['andenjuledag'],\n      keywords_y: ['anden']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Easter Related Holidays\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.easter = {\n    \"Ash Wednesday\": {\n      date: 'easter-46'\n    },\n    \"Lent\": {\n      date: 'easter-46|easter-3'\n    },\n    \"Maundy Thursday\": {\n      date: 'easter-3',\n      keywords_y: ['maundy', 'thursday']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Holy Saturday\": {\n      date: 'easter-1',\n      keywords_y: ['holy', 'saturday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Easter Monday\": {\n      date: 'easter+1',\n      keywords_y: ['easter', 'monday']\n    },\n    \"Ascension Day\": {\n      date: 'easter+39'\n    },\n    \"Pentecost Sunday\": {\n      date: 'easter+49',\n      keywords_y: ['pentecost'],\n      keywords: ['sunday']\n    },\n    \"Whit Monday\": {\n      date: 'easter+50',\n      keywords_y: ['whit'],\n      keywords: ['monday']\n    },\n    \"Corpus Christi\": {\n      date: 'easter+60',\n      keywords: ['feast']\n    }\n  };\n\n  var easter = function(y) {\n    var c = Math.floor(y / 100);\n    var n = y - 19 * Math.floor(y / 19);\n    var k = Math.floor((c - 17) / 25);\n    var i = c - Math.floor(c / 4) - Math.floor((c - k) / 3) + 19 * n + 15;\n    i = i - 30 * Math.floor((i / 30));\n    i = i - Math.floor(i / 28) * (1 - Math.floor(i / 28) * Math.floor(29 / (i + 1)) * Math.floor((21 - n) / 11));\n    var j = y + Math.floor(y / 4) + i + 2 - c + Math.floor(c / 4);\n    j = j - 7 * Math.floor(j / 7);\n    var l = i - j;\n    var m = 3 + Math.floor((l + 40) / 44);\n    var d = l + 28 - 31 * Math.floor(m / 4);\n    return moment([y, (m - 1), d]);\n  };\n\n  moment.modifyHolidays.extendParser(function(m, date){\n    if (~date.indexOf('easter')) {\n      var dates = date.split('|');\n      var ds = [];\n\n      for (i = 0; i < dates.length; i++) {\n        if (dates[i].substring(0, 6) === 'easter') {\n          var e = easter(m.year());\n\n          if (dates[i].charAt(6) === '-') { e.subtract(dates[i].substring(7), 'days'); }\n          if (dates[i].charAt(6) === '+') { e.add(dates[i].substring(7), 'days'); }\n\n          if (dates.length === 1) { return e; }\n          ds.push(e.format('M/D'));\n        } else {\n          ds.push(dates[i]);\n        }\n      }\n\n      if (ds.length) { return ds.join('|'); }\n    }\n  });\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Finland\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.finland = {\n    \"Uudenvuodenpäivä\": {\n      date: '1/1',\n      keywords: ['uudenvuodenpaiva', 'new', 'year']\n    },\n    \"Loppiainen\": {\n      date: '1/6'\n    },\n    \"Vappu\": {\n      date: '5/1'\n    },\n    \"Juhannuspäivä\": {\n      date: '6/(6,[21])',\n      keywords: ['juhannuspaiva']\n    },\n    \"Pyhäinpäivä\": {\n      date: '11/(6,[1])',\n      keywords: ['pyhainpaiva']\n    },\n    \"Joulupäivä\": {\n      date: '12/25',\n      keywords: ['joulupaiva', 'christmas']\n    },\n    \"Tapaninpäivä\": {\n      date: '12/26',\n      keywords: ['tapaninpaiva']\n    },\n    \"Pitkäperjantai\": {\n      date: 'easter-2',\n      keywords: ['pitkaperjantai', 'good', 'friday']\n    },\n    \"Pääsiäispäivä\": {\n      date: 'easter',\n      keywords: ['paasiaispaiva', 'easter'],\n      keywords_n: ['toinen', 'monday']\n    },\n    \"Toinen Pääsiäispäivä\": {\n      date: 'easter+1',\n      keywords: ['paasiaispaiva', 'easter', 'monday'],\n      keywords_y: ['toinen']\n    },\n    \"Helatorstai\": {\n      date: 'easter+39',\n      keywords: ['ascension']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Germany\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      BB : Brandenburg\n      BW : Baden-Württemberg\n      BY : Bayern\n      HE : Hessen\n      MV : Mecklenburg-Vorpommern\n      NW : Nordrhein-Westfalen\n      RP : Rheinland-Pfalz\n      SN : Sachsen\n      SL : Saarland\n      ST : Sachsen-Anhalt\n      TH : Thüringen\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.germany = {\n    \"Neujahrstag\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Karfreitag\": {\n      date: 'easter-2',\n      keywords: ['good', 'friday']\n    },\n    \"Ostersonntag\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday'],\n      regions: ['bb']\n    },\n    \"Ostermontag\": {\n      date: 'easter+1',\n      keywords: ['easter', 'monday']\n    },\n    \"Heilige Drei Könige\": {\n      date: '1/6',\n      keywords: ['konige'],\n      regions: ['bw', 'by', 'st']\n    },\n    \"Maifeiertag\": {\n      date: '5/1'\n    },\n    \"Christi Himmelfahrt\": {\n      date: 'easter+39',\n      kaywords: ['ascension']\n    },\n    \"Pfingstsonntag\": {\n      date: 'easter+49',\n      keywords: ['pentecost'],\n      regions: ['bb']\n    },\n    \"Pfingstmontag\": {\n      date: 'easter+50',\n      keywords: ['whit', 'monday']\n    },\n    \"Fronleichnam\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi'],\n      regions: ['bw', 'by', 'he', 'nw', 'rp', 'sl']\n    },\n    \"Mariä Himmelfahrt\": {\n      date: '8/15',\n      keywords: ['maria'],\n      regions: ['sl']\n    },\n    \"Tag der deutschen Einheit\": {\n      date: '10/3'\n    },\n    \"Reformationstag\": {\n      date: '10/31',\n      regions: ['bb', 'mv', 'sn', 'st', 'th']\n    },\n    \"Allerheiligen\": {\n      date: '11/1',\n      regions: ['bw', 'by', 'nw', 'rp', 'sl']\n    },\n    \"Buß- und Bettag\": {\n      date: '11/(3,[17])',\n      keywords: ['bub'],\n      regions: ['sn']\n    },\n    \"Weihnachten\": {\n      date: '12/24',\n      keywords: ['christmas']\n    },\n    \"Zweiter Weihnachtsfeiertag\": {\n      date: '12/26',\n      keywords_y: ['zweiter']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Ghana\n//! author : Emmanuel Zidafamor : https://github.com/e-zidaf\n/* Cities :\n       Accra\n       Kumasi\n       Tamale\n       Secondi-Takoradi\n       Sunyani\n       Cape-Coast\n       Bayelsa\n       Obuasi\n       Teshie\n       Tema\n       Koforidua\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.ghana = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords: ['New Year'],\n    },\n    \"New Year's Holiday\":{\n        date: '1/2',\n        keywords: ['Public Holiday'],\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Independence Day\": {\n      date: '3/6',\n      keywords: ['Independence'],\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n      regions_n: ['qc']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n    },\n//! Monday's precceding Easter Sundays\n    \"Easter Monday\": {\n        date: 'easter-3',\n        keywords: ['easter monday'],\n    },\n    \"African Unity Day\": {\n      date: '5/25',\n      keywords: ['unity day'],\n    },\n    \"Eid ul-Fitr\": {\n      date: '6/26',\n      keywords: ['end of ramadan'],\n    },\n    \"Republic Day\": {\n      date: '7/3',\n      keywords: ['ghana republic'],\n    },\n    \"Eidul-Adha\": {\n      date: '9/1',\n      keywords: ['Eid'],\n    },\n    \"Founders Day\": {\n      date: '9/21',\n      keywords: ['birthday of Ghana first president, Kwame Nkrumah'],\n    },\n    \"Farmer's Day\": {\n      date: '12/1',\n      keywords: ['farmers day, first friday of december'],\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['on']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : India\n//! author : wonder2991 : https://github.com/wonder2991\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.india = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords: ['naya', 'saal']\n    },\n    \"Republic Day\": {\n      date: '1/26',\n      keywords: ['ganatantr']\n    },\n    \"Mahavir Jayanti\": {\n      date: '4/9',\n      keywords: ['birthday']\n    },\n    \"May Day\": {\n      date: '5/1',\n      keywords: ['labour']\n    },\n    \"Independence Day\": {\n      date: '8/15',\n      keywords: ['svatantrata']\n    },\n    \"Gandhi Jayanti\": {\n      date: '10/02',\n      keywords: ['birthday']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Japan\n//! author : garroadran : https://github.com/garroadran/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.japan = {\n    \"Gantan\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Seijin no hi\": {\n      date: '1/(1,2)',\n      keywords: ['coming', 'age']\n    },\n    \"Kenkoku kinen no hi\": {\n      date: '2/11',\n      keywords: ['national', 'foundation'],\n    },\n    \"Shunbun no hi\": {\n      date: '3/20',\n      keywords: ['vernal', 'equinox']\n    },\n    \"Showa no hi\": {\n      date: '4/29',\n      keywords: ['emperor']\n    },\n    \"Kenpou kinenbi\" : {\n      date: '5/3',\n      keywords: ['constitution', 'memorial']\n    },\n    \"Midori no hi\": {\n      date: '5/4',\n      keywords: ['green', 'greenery']\n    },\n    \"Kodomo no hi\": {\n      date: '5/5',\n      keywords: ['kids', 'children']\n    },\n    \"Umi no hi\": {\n      date: '7/(1,3)',\n      keywords: ['marine', 'ocean', 'sea']\n    },\n    \"Yama no hi\": {\n      date: '8/11',\n      keywords: ['mountain']\n    },\n    \"Keiro no hi\": {\n      date: '9/(1,3)',\n      keywords: ['respect', 'aged', 'seniors']\n    },\n    \"Shubun no hi\": {\n      date: '9/23',\n      keywords: ['autumn', 'fall', 'autumnal', 'equinox']\n    },\n    \"Taiiku no hi\": {\n      date: '10/(1,2)',\n      keywords: ['health', 'sports']\n    },\n    \"Bunka no hi\": {\n      date: '11/3',\n      keywords: ['culture']\n    },\n    \"Rodo kansha no hi\": {\n      date: '11/23',\n      keywords: ['labor', 'appreciation']\n    },\n    \"Tennou tanjoubi\": {\n      date: '12/23',\n      keywords: ['emperor', 'birthday']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Nigeria\n//! author : Emmanuel Zidafamor : https://github.com/e-zidaf\n/* States :\n       Abia\n       Abuja - FCT\n       Adamawa\n       Akwa Ibom \n       Anambra\n       Bauchi\n       Bayelsa\n       Benue\n       Borno\n       Cross River\n       Delta\n       Ebonyi\n       Edo\n       Ekiti\n       Enugu\n       Gombe\n       Imo\n       Jigawa\n       Kaduna\n       Kano\n       Katsina\n       Kebbi\n       Kogi\n       Kwara\n       Lagos\n       Nasarawa\n       Niger\n       Ogun\n       Ondo\n       Osun\n       Oyo\n       Plateau\n       Rivers\n       Sokoto\n       Taraba\n       Yobe\n       Zamfara\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.nigeria = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords: ['New Year'],\n    },\n    \"New Year's Holiday\":{\n        date: '1/2',\n        keywords: ['Public Holiday'],\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Women's Day\": {\n        date: '3/8',\n        keywords: ['womens day'],\n    },\n    \"Dr. Samuel Memorial Day\": {\n        date: '3/17',\n        keywords_y: ['Samuel Ogbemudia'],\n        regions: ['Edo']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n      regions_n: ['qc']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n    },\n//! Monday's precceding Easter Sundays\n    \"Easter Monday\": {\n        date: 'easter-3',\n        keywords: ['easter monday'],\n    },\n    \"Worker's Day\": {\n      date: '5/1',\n      keywords: ['workers'],\n    },\n    \"Children's Day\": {\n      date: '5/27',\n      keywords: ['children'],\n    },\n    \"Democracy Day\": {\n      date: '5/29',\n      keywords: ['democracy'],\n    },\n     \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Eid-el-fitri Sallah\": {\n      date: '6/25',\n      keywords: ['Eid'],\n    },\n    \"Sallah Holiday\": {\n      date: '6/26',\n      keywords: ['sallah'],\n    },\n    \"Sallah Holidays\": {\n      date: '6/27',\n      keywords: ['Eid sallah'],\n    },\n    \"Id el Kabir\": {\n      date: '9/1',\n      keywords: ['Eid'],\n    },\n    \"Independence Day\": {\n      date: '10/1',\n      keywords: ['National Independence'],\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box'],\n      regions: ['on']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);","//! moment-holiday.js locale configuration\n//! locale : Russa\n//! author : Vasilii Vakhtin : https://github.com/Vasil11\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.russia = {\n    \"New Year and Christmas Holidays\": {\n      date: '1/1 | 1/8',\n      keywords: ['new', 'year', 'christmas']\n    },\n    \"Defender's Day\": {\n      date: '2/23',\n      keywords: ['defender\\'s day', '23 of February']\n    },\n    \"Women's Day\": {\n      date: '3/8',\n      keywords: ['women\\'s day', '8 of March']\n    },\n    \"May Day\": {\n      date: '5/1',\n      keywords: ['may day', 'Labour', 'spring']\n    },\n    \"Victory Day\": {\n      date: '5/9',\n      keywords: ['victory day']\n    },\n    \"Russia Day\": {\n      date: '6/12',\n      keywords: ['russia day']\n    },\n    \"National Unity Day\": {\n      date: '11/4',\n      keywords: ['national unity day']\n    },\n    \"New Year\": {\n    date: '12/31',\n    keywords: ['new', 'year']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : Switzerland\n//! author : Kodie Grantham : https://github.com/kodie\n/* regions :\n      AG : Aargau\n      AI : Appenzell Innerrhoden\n      AR : Appenzell Ausserrhoden\n      BE : Bern\n      BL : Basel-Landschaft\n      BS : Basel-Stadt\n      FR : Freiburg\n      GE : Genf\n      GL : Glarus\n      GR : Graubünden\n      JU : Jura\n      LU : Luzern\n      NE : Neuenburg\n      NW : Nidwalden\n      OW : Obwalden\n      SG : St. Gallen\n      SH : Schaffhausen\n      SO : Solothurn\n      SZ : Schwyz\n      TG : Thurgau\n      TI : Tessin\n      UR : Uri\n      VD : Waadt\n      VS : Wallis\n      ZG : Zug\n      ZH : Zürich\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.switzerland = {\n    \"Neujahrstag\": {\n      date: '1/1',\n      keywords: ['new', 'year']\n    },\n    \"Berchtoldstag\": {\n      date: '1/2',\n      keywords: ['berchtold'],\n      regions_n: ['ai', 'ar', 'bl', 'bs', 'ge', 'gr', 'sz', 'ti', 'ur']\n    },\n    \"Dreikönigstag\": {\n      date: '1/6',\n      keywords: ['epiphany', 'konige'],\n      regions: ['sz', 'ti', 'ur']\n    },\n    \"Ausrufung Republik Neuenburg\": {\n      date: '3/1',\n      keywords: ['establishment', 'republic', 'neuchatel'],\n      regions: ['ne']\n    },\n    \"Josephstag\": {\n      date: '3/19',\n      keywords: ['joseph'],\n      regions: ['nw', 'sz', 'ti', 'ur', 'vs']\n    },\n    \"Karfreitag\": {\n      date: 'easter-2',\n      keywords: ['good', 'friday'],\n      regions_n: ['ti', 'vs']\n    },\n    \"Ostersonntag\": {\n      date: 'easter',\n      keywords: ['easter'],\n      keywords_n: ['monday']\n    },\n    \"Ostermontag\": {\n      date: 'easter+1',\n      keywords: ['easter', 'monday'],\n      regions_n: ['ne']\n    },\n    \"Näfelser Fahrt\": {\n      date: '4/(4,1)',\n      keywords: ['nafels', 'fahrt'],\n      regions: ['gl']\n    },\n    \"Tag der Arbeit\": {\n      date: '5/1',\n      keywords: ['labor'],\n      regions: ['ag', 'bl', 'bs', 'ju', 'ne', 'sh', 'so', 'tg', 'ti', 'zh']\n    },\n    \"Auffahrt\": {\n      date: 'easter+39',\n      keywords: ['ascension', 'christi', 'himmelfahrt']\n    },\n    \"Pfingstsonntag\": {\n      date: 'easter+49',\n      keywords: ['pentecost']\n    },\n    \"Pfingstmontag\": {\n      date: 'easter+50',\n      keywords: ['whit', 'monday'],\n      regions_n: ['ne']\n    },\n    \"Fronleichnam\": {\n      date: 'easter+60',\n      keywords: ['corpus', 'christi'],\n      regions_n: ['ar', 'be', 'bl', 'bs', 'ge', 'gl', 'gr', 'sg', 'sh', 'tg', 'vd', 'zh']\n    },\n    \"Unabhängigkeitsfest Jura\": {\n      date: '6/23',\n      keywords: ['independence', 'jura'],\n      regions: ['ju']\n    },\n    \"St. Peter und Paul\": {\n      date: '6/29',\n      keywords: ['st[\\\\s\\\\.]', 'peter', 'paul'],\n      regions: ['ti']\n    },\n    \"Bundesfeiertag\": {\n      date: '8/1',\n      keywords: ['national', 'holiday']\n    },\n    \"Mariä Himmelfahrt\": {\n      date: '8/15',\n      keywords: ['assumption', 'maria'],\n      regions: ['ag', 'ai', 'fr', 'ju', 'lu', 'nw', 'ow', 'so', 'sz', 'ti', 'ur', 'vs', 'zg']\n    },\n    \"Genfer Bettag\": {\n      date: '9/(4,[-11])',\n      keywords: ['repentance'],\n      keywords_y: ['geneva'],\n      keywords_n: ['federal', 'monday'],\n      regions: ['ge']\n    },\n    \"Eidg. Dank-, Buss- und Bettag\": {\n      date: '9/(0,3)',\n      keywords: ['repentance'],\n      keywords_y: ['federal'],\n      keywords_n: ['geneva', 'monday'],\n      regions: ['vd']\n    },\n    \"Bettagsmontag\": {\n      date: '9/(1,[-22])',\n      keywords: ['repentance'],\n      keywords_y: ['monday'],\n      keywords_n: ['federal', 'geneva'],\n      regions: ['vd']\n    },\n    \"Mauritiustag\": {\n      date: '9/22',\n      keywords: ['maurice'],\n      regions: ['ai']\n    },\n    \"Bruderklausenfest\": {\n      date: '9/25',\n      keywords: ['brother', 'klaus'],\n      regions: ['ow']\n    },\n    \"Allerheiligen\": {\n      date: '11/1',\n      keywords: ['all', 'saints'],\n      regions_n: ['ar', 'be', 'bl', 'bs', 'ge', 'gr', 'ne', 'sh', 'tg', 'vd', 'zh']\n    },\n    \"Mariä Empfängnis\": {\n      date: '12/8',\n      keywords: ['immaculate', 'conception'],\n      regions: ['ag', 'ai', 'fr', 'lu', 'nw', 'ow', 'sz', 'ti', 'ur', 'vs', 'zg']\n    },\n    \"Weihnachtstag\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas']\n    },\n    \"Stephanstag\": {\n      date: '12/26',\n      keywords: ['boxing', 'box'],\n      regions_n: ['ge', 'ju', 'vd']\n    },\n    \"Wiederherstellung Republik Genf\": {\n      date: '12/31',\n      keywords: ['restoration', 'republic', 'geneva'],\n      regions: ['ge']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : UK\n//! author : Kodie Grantham : https://github.com/kodie\n//! locale-author: DMCooper : https://github.com/SilentGamelan\n//\n/* regions :\n      EN : England\n      SL : Scotland\n      WL : Wales\n      NI : Northern Island\n*/\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.united_kingdom = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve']\n    },\n    \"Saint David's Day\": {\n      date: '3/1',\n      keywords:['David', 'st[\\\\s\\\\.]'],\n      regions: ['WL']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords:['paddy', 'st[\\\\s\\\\.]'],\n      regions: ['NI']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday'],\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords:['sunday']\n    },\n    \"Easter Monday\": {\n      date: 'easter+1)',\n      keywords_y: ['easter'],\n      keywords: ['monday'],\n      regions: ['EN', 'NI', 'WL']\n    },\n    \"Mothering Sunday\": {\n      date: 'easter-21',\n      keywords_y:['mother'],\n      keywords: ['sunday', 'day']\n    },\n    \"Saint George's Day\": {\n      date: '4/24',\n      keywords: ['st[\\\\s\\\\.]', 'george'],\n      regions: ['EN']\n    },\n    \"May Day\": {\n      date: '5/1'\n    },\n    \"Early May Bank Holiday\" : {\n      date: '5/(1,1)',\n      keywords_y: ['may'],\n      keywords: ['spring', 'early', 'may']\n    },\n    \"Spring Bank Holiday\": {\n      date: '5/(1,-1)',\n      keywords: ['bank', 'spring', 'late']\n    },\n    \"Queen's Birthday\": {\n      date: '6/(6,2)',\n      keywords: ['queen']\n    },\n   \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad', 'father']\n    },\n    \"Battle of the Boyne\": {\n      date: '6/12',\n      keywords: ['battle', 'boyne'],\n      regions: ['NI']\n    },\n    \"Summer Bank Holiday (Scotland)\": {\n      date: '8/(1,1)',\n      keywords: ['summer', 'bank'],\n      regions: ['SC']\n    },\n    \"Summer Bank Holiday\": {\n      date: '8/(1,-1)',\n      keywords: ['summer', 'bank'],\n      keywords_n: ['scottish', 'scotland'],\n      regions: ['EN', 'WL', 'NI']\n    },\n    \"Halloween\": {\n      date: '10/31',\n    },\n    \"Guy Fawks Day\": {\n      date: '10/5',\n      keywords: ['guy', 'fawks', 'bonfire']\n    },\n    \"Remembrance Day\": {\n      date: '1/(0,2)',\n      keywords: ['poppy', 'remembrance']\n    },\n    \"Saint Andrews Day\": {\n      date: '10/30',\n      keywords: ['andrew', 'saint', 'st[\\\\s\\\\.]'],\n      regions: ['SL']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"Boxing Day\": {\n      date: '12/26',\n      keywords: ['box']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n","//! moment-holiday.js locale configuration\n//! locale : United States\n//! author : Kodie Grantham : https://github.com/kodie\n\n(function() {\n  var moment = (typeof require !== 'undefined' && require !== null) && !require.amd ? require('moment') : this.moment;\n\n  moment.holidays.united_states = {\n    \"New Year's Day\": {\n      date: '1/1',\n      keywords_n: ['eve']\n    },\n    \"Martin Luther King Jr. Day\": {\n      date: '1/(1,3)',\n      keywords: ['mlk']\n    },\n    \"Valentine's Day\": {\n      date: '2/14'\n    },\n    \"Washington's Birthday\": {\n      date: '2/(1,3)',\n      keywords: ['george', 'president', 'day']\n    },\n    \"Saint Patrick's Day\": {\n      date: '3/17',\n      keywords: ['st[\\\\s\\\\.]', 'paddy', 'patty']\n    },\n    \"Good Friday\": {\n      date: 'easter-2',\n      keywords_y: ['good', 'friday']\n    },\n    \"Easter Sunday\": {\n      date: 'easter',\n      keywords_y: ['easter'],\n      keywords: ['sunday']\n    },\n    \"Memorial Day\": {\n      date: '5/(1,-1)'\n    },\n    \"Mother's Day\": {\n      date: '5/(0,2)',\n      keywords: ['mom']\n    },\n    \"Father's Day\": {\n      date: '6/(0,3)',\n      keywords: ['dad']\n    },\n    \"Independence Day\": {\n      date: '7/4',\n      keywords: ['4th', 'fourth', 'july']\n    },\n    \"Labor Day\": {\n      date: '9/(1,1)',\n      keywords: ['labour']\n    },\n    \"Columbus Day\": {\n      date: '10/(1,2)',\n      keywords: ['christopher']\n    },\n    \"Halloween\": {\n      date: '10/31'\n    },\n    \"Veteran's Day\": {\n      date: '11/11',\n      keywords: ['vet']\n    },\n    \"Thanksgiving Day\": {\n      date: '11/(4,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_n: ['after']\n    },\n    \"Day after Thanksgiving\": {\n      date: '11/(5,4)',\n      keywords: ['thanks', 'turkey'],\n      keywords_y: ['after']\n    },\n    \"Christmas Eve\": {\n      date: '12/24',\n      keywords: ['christ', 'x-?mas'],\n      keywords_y: ['eve']\n    },\n    \"Christmas Day\": {\n      date: '12/25',\n      keywords: ['christ', 'x-?mas'],\n      keywords_n: ['eve']\n    },\n    \"New Year's Eve\": {\n      date: '12/31',\n      keywords_y: ['year', 'eve']\n    }\n  };\n\n  if ((typeof module !== 'undefined' && module !== null ? module.exports : void 0) != null) { module.exports = moment; }\n}).call(this);\n"]}